name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: macos-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1
      - name: Run build-wrapper
        run: |
          build-wrapper-macosx-x86 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} xcodebuild -project SonorCLoudProject.xcodeproj -scheme macos-xcode
      - name: Run tests to generate coverage statistics
        run: |
          xcodebuild test -project SonorCLoudProject.xcodeproj -scheme SonorCLoudProject -enableCodeCoverage YES -derivedDataPath build
      - name: Collect coverage into one XML report
        run: |
          bash xccov-to-generic.sh build/Logs/Test/*.xcresult/ > generic-coverage.xml
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Put the name of your token here
        run: |
          sonar-scanner \
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            --define sonar.coverageReportPaths=generic-coverage.xml
        with:
          args: >
              -Dsonar.organization=mandabhaskarakiranorganization
              -Dsonar.projectKey=MandaBhaskaraKiran_SonorCloudDemo












































on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request.
   workflow_dispatch:
   
name: Main Workflow
jobs:
  DemoSonarCloudSCan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - name: Run tests to generate coverage statistics
        run: |
          xcodebuild test -project SonorCLoudProject.xcodeproj -scheme SonorCLoudProjectTests -enableCodeCoverage YES -derivedDataPath build
      - name: Collect coverage into one XML report
        run: |
          bash xccov-to-generic.sh build/Logs/Test/*.xcresult/ > generic-coverage.xml
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
            GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
              -Dsonar.organization=mandabhaskarakiranorganization
              -Dsonar.projectKey=MandaBhaskaraKiran_SonorCloudDemo
